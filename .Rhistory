#load packages
library(tidyverse)
##bar chart race
install.packages("tidyverse")
install.packages("gganimate")
install.packages("reshape2")
install.packages("gifski")
##bar chart race
install.packages("tidyverse")
(tidyverse)
(tidyverse)
(tidyverse)
#load packages
library(tidyverse)
##bar chart race
install.packages("tidyverse")
install.packages("gganimate")
install.packages("reshape2")
install.packages("gifski")
#load packages
library(tidyverse)
library(gganimate)
library(gganimate)
library(reshape2)
library(gifski)
install.packages("gganimate")
install.packages("reshape2")
install.packages("reshape2")
#load packages
library(tidyverse)
library(gganimate)
library(reshape2)
library(gifski)
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
library(gganimate)
install.packages("gganimate")
library(gganimate)
library(reshape2)
library(gifski)
##bar chart race
install.packages("tidyverse")
##bar chart race
install.packages("tidyverse")
install.packages("gganimate")
#load packages
library(tidyverse)
library(gganimate)
#load data
df <- read.csv("D:/DATAMINING/avocado.csv")
df <- select(df, Small.Bags, Large.Bags, XLarge.Bags, year)
cols <- c("Small", "Large", "XLarge", "year")
colnames(df) <- cols
#group by year
sum_table <- df %>% group_by(year) %>% summarize_all(sum)
#wide to long
sum_table <- melt(sum_table, id.vars = "year")
#change $variable to $name
colnames(sum_table)[2] <- "name"
#set sum_table as data
data <- sum_table
make_barchart_race <- function(data,x,y,
number=10,
title="",
caption="",
nframes=250,
fps=5,
end_pause=10){
#set up variables for use with tidy evaluation
y <- rlang::enquo(y)
x <- rlang::enquo(x)
number <- rlang::enquo(number)
#take the input dataset, compute ranks within each time period
data %>%
group_by(year) %>%
arrange(-!!y) %>%
mutate(rank=row_number()) %>%
#filter to top "number"
filter(rank<=!!number) -> data
#plot the data
data %>%
ggplot(aes(x=-rank,y=!!y,fill=!!x, group=!!x)) +
geom_tile(aes(y=!!y/2,height=!!y),width=0.9,show.legend = F)+
geom_text(aes(label=!!x),
hjust="right",
colour="black",
fontface="bold",
nudge_y=-1000)+
geom_text(aes(label=scales::comma(!!y)),
hjust="left",
nudge_y=2000,
colour="grey30")+
theme_minimal() +
coord_flip(clip="off") +
scale_x_discrete("") +
scale_y_continuous("",labels=scales::comma)+
theme(panel.grid.major.y=element_blank(),
panel.grid.minor.x=element_blank(),
plot.title= element_text(size=20,colour="grey50",face="bold"),
plot.caption = element_text(colour="grey50"),
plot.subtitle = element_text(size=20,colour="grey50",face="bold"),
plot.margin = margin(1,1,1,2,"cm"),
axis.text.y=element_blank())+
#this bit does the animation by year
transition_time(year) +
labs(title=title,
subtitle='{round(frame_time,0)}',
caption=caption)-> p
#animate the plot - this is returned by the function
animate(p, nframes = nframes, fps = fps, end_pause = end_pause, width = 1000, height = 400, duration = 40)
}
#call the function to make the animation:
make_barchart_race(data,
name,
value,
title="Bag size sales by year",
caption="Avocado sales")
#save it:
anim_save("out.gif")
#load data
df <- read.csv("D:/DATAMINING/avocado.csv")
df <- select(df, Small.Bags, Large.Bags, XLarge.Bags, year)
cols <- c("Small", "Large", "XLarge", "year")
colnames(df) <- cols
#group by year
sum_table <- df %>% group_by(year) %>% summarize_all(sum)
#wide to long
sum_table <- melt(sum_table, id.vars = "year")
#change $variable to $name
colnames(sum_table)[2] <- "name"
#set sum_table as data
data <- sum_table
make_barchart_race <- function(data,x,y,
number=10,
title="",
caption="",
nframes=250,
fps=5,
end_pause=10){
#set up variables for use with tidy evaluation
y <- rlang::enquo(y)
x <- rlang::enquo(x)
number <- rlang::enquo(number)
#take the input dataset, compute ranks within each time period
data %>%
group_by(year) %>%
arrange(-!!y) %>%
mutate(rank=row_number()) %>%
#filter to top "number"
filter(rank<=!!number) -> data
#plot the data
data %>%
ggplot(aes(x=-rank,y=!!y,fill=!!x, group=!!x)) +
geom_tile(aes(y=!!y/2,height=!!y),width=0.9,show.legend = F)+
geom_text(aes(label=!!x),
hjust="right",
colour="black",
fontface="bold",
nudge_y=-1000)+
geom_text(aes(label=scales::comma(!!y)),
hjust="left",
nudge_y=2000,
colour="grey30")+
theme_minimal() +
coord_flip(clip="off") +
scale_x_discrete("") +
scale_y_continuous("",labels=scales::comma)+
theme(panel.grid.major.y=element_blank(),
panel.grid.minor.x=element_blank(),
plot.title= element_text(size=20,colour="grey50",face="bold"),
plot.caption = element_text(colour="grey50"),
plot.subtitle = element_text(size=20,colour="grey50",face="bold"),
plot.margin = margin(1,1,1,2,"cm"),
axis.text.y=element_blank())+
#this bit does the animation by year
transition_time(year) +
labs(title=title,
subtitle='{round(frame_time,0)}',
caption=caption)-> p
#animate the plot - this is returned by the function
animate(p, nframes = nframes, fps = fps, end_pause = end_pause, width = 1000, height = 400, duration = 40)
}
#call the function to make the animation:
make_barchart_race(data,
name,
value,
title="Bag size sales by year",
caption="Avocado sales")
#save it:
anim_save("out.gif")
rules<- apriori(dataset, parameter = list(support = 0.3, confidence = 0.9))
setwd(lokasi_kerja)
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("w8.csv", sep = ";")
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
#library
install.packages("C50")
install.packages("printr")
library(C50)
library(printr)
#pembuatan model
model <- C5.0(buys_computer ~., data=dataset)
View(data)
View(dataset)
View(df)
View(sum_table)
View(dataset)
#pembuatan model
model <- C5.0(city ~., data=dataset)
#pembuatan model
model <- C5.0(reasonable ~., data=dataset)
#pembuatan model
model <- C5.0(reasonable ~., data=dataset)
#pembuatan model
model <- C5.0(performance ~., data=dataset)
#melihat hasil model
model
#pembuatan model
model <- C5.0(performance ~., data=dataset)
#pembuatan model
model <- C5.0(competition_score ~., data=dataset)
#pembuatan model
model <- C5.0(competition score ~., data=dataset)
#pembuatan model
model <- C5.0(country ~., data=dataset)
#pembuatan model
model <- C5.0(country ~., data=dataset)
#pembuatan model
model <- C5.0(store ID ~., data=dataset)
#pembuatan model
model <- C5.0(Store ID ~., data=dataset)
#pembuatan model
model <- C5.0(Country ~., data=dataset)
#pembuatan model
model <- C5.0(Store_ID ~., data=dataset)
#pembuatan model
model <- C5.0(performance ~., data=dataset)
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
View(df)
View(dataset)
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
#melihat hasil model
model
summary(model)
#gambar model
plot(model)
#membuat dataset
datatesting <- dataset[,1:4]
#prediksi
predictions <- predict(model, datatesting)
#bandingkan hasil prediksi dengan dataset
table(predictions, dataset$buys_computer)
#pembuatan model
model <- C5.0(Car_Park ~., data=dataset)
#pembuatan model
model <- C5.0(Car Park ~., data=dataset)
#pembuatan model
model <- C5.0(CarPark ~., data=dataset)
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
#pembuatan model
model <- C5.0(CarPark ~., data=dataset)
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
is.data.frame(Performance)
is.data.frame(cars)
is.data.frame(datatesting)
View(data)
is.data.frame(dataset)
#pembuatan model
model <- C5.0(dataset ~., data=dataset)
#call the function to make the animation:
make_barchart_race(data,
name,
value,
title="Bag size sales by year",
caption="Avocado sales")
#save it:
anim_save("out.gif")
library(C5.0)
#pembuatan model
model <- C5.0(Store.ID ~., data=dataset)
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
#library
install.packages("C50")
#pembuatan model
model <- C5.0(Store.ID ~., data=dataset)
#library
install.packages("C50")
install.packages("C50")
is.data.frame(sum_table)
#pembuatan model
model <- C5.0(sum_tables ~., data=dataset)
View(make_barchart_race)
View(sum_table)
View(df)
library(C50)
library(printr)
View(dataset)
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
#library
install.packages("C50")
install.packages("C50")
library(printr)
View(df)
#pembuatan model
model <- C5.0(df ~., data=dataset)
View(make_barchart_race)
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
#pembuatan model
model <- printr(Performance ~., data=dataset)
packages <- c("plyr","dplyr","ggplot2")
lapply(packages, library, character.only = TRUE)
df <- read.csv("C:/DATAMINING/ab_data.csv")
df <- read.csv("D:/DATAMINING/ab_data.csv")
str(df)
colSums(is.na(df))
unique_id <- unique(df$user_id)
length(unique_id)
df <- df[!duplicated(df$user_id), ]
summary(df$group)
summary(df$landing_page)
freqgrouplanding_page <- ddply(df, .(df$group, df$landing_page), nrow)
names(freqgrouplanding_page) <- c("group", "landing_page", "Freq")
freqgrouplanding_page
dfclean1 <- dplyr::filter(df, group == "control" & landing_page == "old_page")
dfclean2 <- dplyr::filter(df, group == "treatment" & landing_page == "new_page")
df <- rbind(dfclean1, dfclean2)
dfgrouplanding_page <- ddply(df, .(df$group, df$landing_page), nrow)
names(dfgrouplanding_page) <- c("group", "landing_page", "Freq")
dfgrouplanding_page
p <- ggplot(dfgrouplanding_page, aes(x = landing_page, y = Freq))+
geom_col(aes(fill = group), width = 0.7)
p
groupconvertfreq <- ddply(df, .(df$group, df$converted), nrow)
names(groupconvertfreq) <- c("group", "converted", "Freq")
groupconvertfreq
x <- matrix(c(126877, 127180, 17349, 17134), nrow=2)
chisq.test(x)
df$Date <- as.Date(df$timestamp)
df$Time <- format(as.POSIXct(df$timestamp) ,format="%H:%M:%S")
df$Weekday <- weekdays(df$Date)
df$Weekday <- ordered(df$Weekday, levels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
barplot(table(df$Weekday))
#lokasi file
setwd("D:/DATAMINING")
#pembacaan dataset
dataset <- read.csv("storedata.csv", sep = ";")
install.packages("printr")
install.packages("printr")
library(C50)
library(printr)
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
#pembuatan model
model <- C5.0(Performance ~., data=dataset)
("D:/DATAMINING/ab_data.csv")
df <- read.csv("D:/DATAMINING/ab_data.csv")
str(df)
colSums(is.na(df))
df <- read.csv("D:/DATAMINING/ab_data.csv")
str(df)
colSums(is.na(df))
unique_id <- unique(df$user_id)
length(unique_id)
df <- df[!duplicated(df$user_id), ]
summary(df$group)
summary(df$landing_page)
freqgrouplanding_page <- ddply(df, .(df$group, df$landing_page), nrow)
names(freqgrouplanding_page) <- c("group", "landing_page", "Freq")
freqgrouplanding_page
dfclean1 <- dplyr::filter(df, group == "control" & landing_page == "old_page")
dfclean2 <- dplyr::filter(df, group == "treatment" & landing_page == "new_page")
df <- rbind(dfclean1, dfclean2)
dfgrouplanding_page <- ddply(df, .(df$group, df$landing_page), nrow)
names(dfgrouplanding_page) <- c("group", "landing_page", "Freq")
dfgrouplanding_page
p <- ggplot(dfgrouplanding_page, aes(x = landing_page, y = Freq))+
geom_col(aes(fill = group), width = 0.7)
p
groupconvertfreq <- ddply(df, .(df$group, df$converted), nrow)
names(groupconvertfreq) <- c("group", "converted", "Freq")
groupconvertfreq
x <- matrix(c(126877, 127180, 17349, 17134), nrow=2)
chisq.test(x)
df$Date <- as.Date(df$timestamp)
df$Time <- format(as.POSIXct(df$timestamp) ,format="%H:%M:%S")
df$Weekday <- weekdays(df$Date)
df$Weekday <- ordered(df$Weekday, levels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
barplot(table(df$Weekday))
